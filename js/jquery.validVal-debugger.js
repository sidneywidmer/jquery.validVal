/*	 *	jQuery validVal debugger *	Helps debugging the validation of forms * *	Copyright (c) 2013 Fred Heusschen *	www.frebsite.nl * *	Dual licensed under the MIT and GPL licenses. *	http://en.wikipedia.org/wiki/MIT_License *	http://en.wikipedia.org/wiki/GNU_General_Public_License */(function( $ ){	if ( !console )				console 			= {};	if ( !console.log ) 		console.log 		= function() {};	if ( !console.info ) 		console.info 		= function() {};	if ( !console.warn ) 		console.warn 		= function() {};	if ( !console.error ) 		console.error 		= function() {};	if ( !console.group ) 		console.group 		= function() {};	if ( !console.groupEnd )	console.groupEnd	= function() {};    if ( $.fn.validValDebug )    {        return;    }    $.fn.validValDebug = function( addBtn )    {		//	validVal not found, don't proceed	    if ( !$.fn.validVal )	    {			console.error( 'validVal-plugin not found!' );			return;	    }		//	Old version of validVal, don't proceed	    if ( 4.4 > $.fn.validVal.version[ 0 ] + ( $.fn.validVal.version[ 1 ] / 10 ) )	    {	    	console.error( 'validValDebug needs at least version 4.4.0 of the validVal-plugin.' );		    return;	    }		//	Fired on multiple forms	    if ( this.length > 1 )        {            return this.each(            	function()            	{                	$(this).validVal( addBtn );                }            );        }        var form = this;		//	Form is not validVal, don't proceed		if ( !form.data( 'vv-isValidVal' ) )		{			console.error( nodeStringFromNode( form[ 0 ] ) + ' is not a validVal form.' );			return;		}		//	Add the validate button		if ( typeof addBtn != 'boolean' )		{			addBtn = true;		}		if ( addBtn )		{			$( '<input type="button" value="Validate" />' )				.appendTo( form )				.bind(					'click.vv',					function()					{						form.triggerHandler( 'validate.vv', form, false );					}				);		}		//	Get the options		var opts = form.triggerHandler( 'options' );		//	Bind the debugging info to the fields		$('input, select, textarea', form).bind(			'isValid.vv',			function( e, valid, callCallback, invalidCheck )			{				if ( valid )				{					console.group( 'Valid:\n', this );					console.log( 'Validation(s) that passed: "' + $(this).data( 'vv-validations' ).split( ' ' ).join( '", "' ) + '".' );				}				else				{					console.group( 'NOT VALID!\n', this );					var msg = 'Validation "' + invalidCheck + '" failed for the value "' + $(this).val() + '"';					if ( opts.validations[ invalidCheck ] )					{						msg += ':\n';						msg += opts.validations[ invalidCheck ];					}					else					{						msg += '.';					}					console.warn( msg + '\n\n' );				}				console.groupEnd();			}		);    }	function nodeStringFromNode( node )	{		var str = node.nodeName.toLowerCase();		if ( node.id )		{			str += '#' + node.id;		}		else if ( node.name )		{			str += '[name="' + node.name + '"]';		}		return str;	}})( jQuery );